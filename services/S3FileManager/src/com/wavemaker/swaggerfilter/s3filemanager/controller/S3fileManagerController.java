/*Copyright (c) 2022-2023 wavemaker.com All Rights Reserved.This software is the confidential and proprietary information of wavemaker.com You shall not disclose such Confidential Information and shall use it only in accordance with the terms of the source code license agreement you entered into with wavemaker.com*/
package com.wavemaker.swaggerfilter.s3filemanager.controller;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.wavemaker.connector.awss3connector.AWSS3ObjectSummary;
import com.wavemaker.runtime.commons.file.model.DownloadResponse;
import com.wavemaker.swaggerfilter.model.FileDetails;
import com.wavemaker.swaggerfilter.s3filemanager.S3FileManager;
import com.wavemaker.tools.api.core.annotations.WMAccessVisibility;
import com.wavemaker.tools.api.core.models.AccessSpecifier;
import com.wordnik.swagger.annotations.Api;

/**
 * Controller object for domain model class {@link S3FileManager}.
 * @see S3FileManager
 */
@RestController
@Api(value = "S3fileManagerController", description = "controller class for java service execution")
@RequestMapping("/s3FileManager")
public class S3fileManagerController {

    @Autowired
    private S3FileManager s3FileManager;

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @DeleteMapping(value = "/file")
    public void deleteFile(@RequestParam(value = "s3KeyName", required = false) String s3KeyName) {
        s3FileManager.deleteFile(s3KeyName);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @GetMapping(value = "/downloadFile", produces = "application/octet-stream")
    public DownloadResponse downloadFile(@RequestParam(value = "s3KeyName", required = false) String s3KeyName) {
        return s3FileManager.downloadFile(s3KeyName);
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @GetMapping(value = "/objects")
    public List<AWSS3ObjectSummary> listObjects() {
        return s3FileManager.listObjects();
    }

    @WMAccessVisibility(value = AccessSpecifier.APP_ONLY)
    @PostMapping(value = "/uploadSwaggerFileToS3", consumes = "multipart/form-data")
    public FileDetails uploadSwaggerFileToS3(@RequestPart(value = "file", required = false) MultipartFile file) {
        return s3FileManager.uploadSwaggerFileToS3(file);
    }
}